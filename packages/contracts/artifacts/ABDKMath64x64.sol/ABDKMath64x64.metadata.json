{
  "compiler": {
    "version": "0.8.9+commit.e5eed63a"
  },
  "language": "Solidity",
  "output": {
    "abi": [],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "notice": "Smart contract library of mathematical functions operating with signed 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is basically a simple fraction whose numerator is signed 128-bit integer and denominator is 2^64.  As long as denominator is always the same, there is no need to store it, thus in Solidity signed 64.64-bit fixed point numbers are represented by int128 type holding only the numerator.",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "src/dollar/libs/ABDKMath64x64.sol": "ABDKMath64x64"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 20000
    },
    "remappings": [
      ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      ":@uniswap/v2-core/contracts/=lib/Uniswap/v2-core/contracts/",
      ":@uniswap/v2-periphery/contracts/=lib/Uniswap/v2-periphery/contracts/",
      ":Uniswap/=lib/Uniswap/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":solidity-linked-list/=lib/solidity-linked-list/"
    ]
  },
  "sources": {
    "src/dollar/libs/ABDKMath64x64.sol": {
      "keccak256": "0x80f170587178b66a2bfcdaaaac0957732c02b2a240dcd21a95db66328df04b8b",
      "license": "BSD-4-Clause",
      "urls": [
        "bzz-raw://3a983fc0e96d1ecf8b2f7a4154fcaa08d02bcf7ee2d2414d283c9585a33dc0c2",
        "dweb:/ipfs/QmQFW9HjLRBENm52oaAfALySjk1if1DTvDm5g7xt3Bm3jG"
      ]
    }
  },
  "version": 1
}