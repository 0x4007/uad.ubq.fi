{
  "compiler": {
    "version": "0.8.9+commit.e5eed63a"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_totalULP",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_totalUBOND",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_targetPrice",
            "type": "uint256"
          }
        ],
        "name": "bondPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "_priceUBOND",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_shares",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_currentShareValue",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_targetPrice",
            "type": "uint256"
          }
        ],
        "name": "bonding",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "_uBOND",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_uLP",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_weeks",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_multiplier",
            "type": "uint256"
          }
        ],
        "name": "durationMultiply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "_shares",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_uBOND",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_currentShareValue",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_targetPrice",
            "type": "uint256"
          }
        ],
        "name": "redeemBonds",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "_uLP",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_multiplier",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_price",
            "type": "uint256"
          }
        ],
        "name": "ugovMultiply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "_newMultiplier",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "bondPrice(uint256,uint256,uint256)": {
          "details": "formula bond price",
          "params": {
            "_targetPrice": ",  target uAD price",
            "_totalUBOND": ", total bond shares",
            "_totalULP": ", total LP tokens"
          },
          "returns": {
            "_priceUBOND": ", bond share price"
          }
        },
        "bonding(uint256,uint256,uint256)": {
          "details": "formula bonding",
          "params": {
            "_currentShareValue": ", current share value",
            "_shares": ", amount of shares",
            "_targetPrice": ", target uAD price"
          },
          "returns": {
            "_uBOND": ", amount of bonding shares"
          }
        },
        "durationMultiply(uint256,uint256,uint256)": {
          "details": "formula duration multiply",
          "params": {
            "_multiplier": ", bonding discount multiplier = 0.0001",
            "_uLP": ", amount of LP tokens",
            "_weeks": ", mimimun duration of staking period"
          },
          "returns": {
            "_shares": ", amount of shares"
          }
        },
        "redeemBonds(uint256,uint256,uint256)": {
          "details": "formula redeem bonds",
          "params": {
            "_currentShareValue": ", current share value",
            "_targetPrice": ", target uAD price",
            "_uBOND": ", amount of bonding shares"
          },
          "returns": {
            "_uLP": ", amount of LP tokens"
          }
        },
        "ugovMultiply(uint256,uint256)": {
          "details": "formula ugov multiply",
          "params": {
            "_multiplier": ", initial ugov min multiplier",
            "_price": ", current share price"
          },
          "returns": {
            "_newMultiplier": ", new ugov min multiplier"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "bonding(uint256,uint256,uint256)": {
          "notice": "UBOND = _shares / _currentShareValue * _targetPrice"
        },
        "durationMultiply(uint256,uint256,uint256)": {
          "notice": "_shares = (1 + _multiplier * _weeks^3/2) * _uLP"
        },
        "redeemBonds(uint256,uint256,uint256)": {
          "notice": "_uLP = _uBOND * _currentShareValue / _targetPrice"
        },
        "ugovMultiply(uint256,uint256)": {
          "notice": "new_multiplier = multiplier * ( 1.05 / (1 + abs( 1 - price ) ) )"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "src/dollar/UbiquityFormulas.sol": "UbiquityFormulas"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 20000
    },
    "remappings": [
      ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      ":@uniswap/v2-core/contracts/=lib/Uniswap/v2-core/contracts/",
      ":@uniswap/v2-periphery/contracts/=lib/Uniswap/v2-periphery/contracts/",
      ":Uniswap/=lib/Uniswap/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":solidity-linked-list/=lib/solidity-linked-list/"
    ]
  },
  "sources": {
    "src/dollar/UbiquityFormulas.sol": {
      "keccak256": "0xed00a45922fd798d0c4dbc3d3afafd2515976417e74a4e57e1c9f388fb96644c",
      "license": "MIT",
      "urls": [
        "bzz-raw://001bbc025d3a457a29716161a3d352323bef05afb5d814df23bc15724327c603",
        "dweb:/ipfs/QmeAKVg5Q8GgZwjkMNztg9PHWNPZdmRdmLzp3c8nmbC2zJ"
      ]
    },
    "src/dollar/libs/ABDKMathQuad.sol": {
      "keccak256": "0xcad519ada31d1ba4038ef6484a5c056fa807c7b4dbee42e5de59fc046a154f33",
      "license": "BSD-4-Clause",
      "urls": [
        "bzz-raw://56d38e400451cd86151e6e50cf87e316262f395dac59e735c014956ef23c120a",
        "dweb:/ipfs/QmP1P9hoB6DCGEeYCqFgwkTydrdaMvw85SpQBbyAFhA1Bq"
      ]
    }
  },
  "version": 1
}