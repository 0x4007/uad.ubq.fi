{
  "compiler": {
    "version": "0.8.9+commit.e5eed63a"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "tokenRewards_",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "vestingBlocks_",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "treasury_",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "addr",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "rewards",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "block",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "bondId",
            "type": "uint256"
          }
        ],
        "name": "LogBond",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "addr",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "index",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "rewards",
            "type": "uint256"
          }
        ],
        "name": "LogClaim",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "rewardsRatio",
            "type": "uint256"
          }
        ],
        "name": "LogSetRewards",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Paused",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Unpaused",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "bond",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "bondId",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "bonds",
        "outputs": [
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "claimed",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "block",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "addr",
            "type": "address"
          }
        ],
        "name": "bondsCount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "claim",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "claimed",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "index",
            "type": "uint256"
          }
        ],
        "name": "claimBond",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "claimed",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "pause",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "paused",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "addr",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "index",
            "type": "uint256"
          }
        ],
        "name": "rewardsBondOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "rewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewardsClaimed",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewardsClaimable",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "addr",
            "type": "address"
          }
        ],
        "name": "rewardsOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "rewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewardsClaimed",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rewardsClaimable",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "rewardsRatio",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenRewardsRatio",
            "type": "uint256"
          }
        ],
        "name": "setRewards",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sticker_",
            "type": "address"
          }
        ],
        "name": "setSticker",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "treasury_",
            "type": "address"
          }
        ],
        "name": "setTreasury",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "vestingBlocks_",
            "type": "uint256"
          }
        ],
        "name": "setVestingBlocks",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "sticker",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "tokenRewards",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalClaimedRewards",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalRewards",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "treasury",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "unpause",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "vestingBlocks",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "author": "zapaz.eth",
      "details": "Bond is Ownable, access controled by onlyOwnerUse SafeERC20",
      "kind": "dev",
      "methods": {
        "bond(address,uint256)": {
          "params": {
            "amount": "amount of token to bond",
            "token": "bonded token address"
          },
          "returns": {
            "bondId": "Bond id"
          }
        },
        "bondsCount(address)": {
          "returns": {
            "_0": "number of bonds"
          }
        },
        "claim()": {
          "returns": {
            "claimed": "Rewards claimed succesfully"
          }
        },
        "claimBond(uint256)": {
          "returns": {
            "claimed": "Rewards claimed succesfully"
          }
        },
        "constructor": {
          "params": {
            "tokenRewards_": "Rewards token address",
            "vestingBlocks_": "Vesting duration in blocks"
          }
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "paused()": {
          "details": "Returns true if the contract is paused, and false otherwise."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "rewardsBondOf(address,uint256)": {
          "returns": {
            "rewards": "Amount of rewards",
            "rewardsClaimable": "Amount of still claimable rewards",
            "rewardsClaimed": "Amount of rewards already claimed"
          }
        },
        "rewardsOf(address)": {
          "returns": {
            "rewards": "Amount of rewards",
            "rewardsClaimable": "Amount of still claimable rewards",
            "rewardsClaimed": "Amount of rewards already claimed"
          }
        },
        "setRewards(address,uint256)": {
          "params": {
            "token": "token address",
            "tokenRewardsRatio": "rewardsRatio for this token"
          }
        },
        "setSticker(address)": {
          "params": {
            "sticker_": "sticker boolean"
          }
        },
        "setTreasury(address)": {
          "params": {
            "treasury_": "treasury address"
          }
        },
        "setVestingBlocks(uint256)": {
          "params": {
            "vestingBlocks_": "vesting duration in blocks"
          }
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        },
        "withdraw(address,uint256)": {
          "params": {
            "amount": "amount withdraw",
            "token": "token withdraw"
          }
        }
      },
      "stateVariables": {
        "bonds": {
          "details": "bond index starts at 0 for each address"
        },
        "rewardsRatio": {
          "details": "rewardsRatio is per billion of token bonded"
        },
        "vestingBlocks": {
          "details": "defined in number of block"
        }
      },
      "title": "Simple Bond",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "bond(address,uint256)": {
          "notice": "Bond tokens"
        },
        "bonds(address,uint256)": {
          "notice": "Bonds for each address"
        },
        "bondsCount(address)": {
          "notice": "Get number of bonds for address"
        },
        "claim()": {
          "notice": "Claim all rewards"
        },
        "claimBond(uint256)": {
          "notice": "Claim bond rewards"
        },
        "constructor": {
          "notice": "Simple Bond constructor"
        },
        "pause()": {
          "notice": "Pause Bonding and Claiming"
        },
        "rewardsBondOf(address,uint256)": {
          "notice": "Bond rewards balance: amount and already claimed"
        },
        "rewardsOf(address)": {
          "notice": "Bond rewards balance: amount and already claimed"
        },
        "rewardsRatio(address)": {
          "notice": "Rewards ratio for token bonded"
        },
        "setRewards(address,uint256)": {
          "notice": "Set Rewards for specific Token"
        },
        "setSticker(address)": {
          "notice": "Set sticker"
        },
        "setTreasury(address)": {
          "notice": "Set treasury address"
        },
        "setVestingBlocks(uint256)": {
          "notice": "Set vesting duration"
        },
        "sticker()": {
          "notice": "NFT stick address"
        },
        "tokenRewards()": {
          "notice": "Rewards token address"
        },
        "totalClaimedRewards()": {
          "notice": "Total rewards claimed"
        },
        "totalRewards()": {
          "notice": "Total rewards"
        },
        "treasury()": {
          "notice": "Treasury address"
        },
        "unpause()": {
          "notice": "Unpause Bonding and Claiming"
        },
        "vestingBlocks()": {
          "notice": "Vesting period"
        },
        "withdraw(address,uint256)": {
          "notice": "Withdraw token from the smartcontract, only for owner"
        }
      },
      "notice": "SimpleBond is a simple Bond mecanism, allowing to sell tokens bonded and get rewards tokensThe reward token is fully claimable only after the vesting period",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "src/ubiquistick/SimpleBond.sol": "SimpleBond"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 20000
    },
    "remappings": [
      ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      ":@uniswap/v2-core/contracts/=lib/Uniswap/v2-core/contracts/",
      ":@uniswap/v2-periphery/contracts/=lib/Uniswap/v2-periphery/contracts/",
      ":Uniswap/=lib/Uniswap/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":solidity-linked-list/=lib/solidity-linked-list/"
    ]
  },
  "sources": {
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
      "license": "MIT",
      "urls": [
        "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
        "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
      ]
    },
    "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
      "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
      "license": "MIT",
      "urls": [
        "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
        "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
      ]
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
      "license": "MIT",
      "urls": [
        "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
        "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
      ]
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
      "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
      "license": "MIT",
      "urls": [
        "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
        "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
      ]
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
      "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
      "license": "MIT",
      "urls": [
        "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
        "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
      ]
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb",
      "license": "MIT",
      "urls": [
        "bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda",
        "dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "keccak256": "0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24",
      "license": "MIT",
      "urls": [
        "bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a",
        "dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
      "license": "MIT",
      "urls": [
        "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
        "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    },
    "src/ubiquistick/SimpleBond.sol": {
      "keccak256": "0xe79b16e00946fde110ccd4c2e25ee2c36b215a963e204857eda9db4f54d565af",
      "license": "MIT",
      "urls": [
        "bzz-raw://c75fdd6fc46b898e1a6fc49c2d92c4fa96a7a98f09e9135e6802ae9db9316ee2",
        "dweb:/ipfs/Qme511UFFzqR8zUTCU8wgzBLqbBZpGqDtFEWwvuNEeLm5g"
      ]
    },
    "src/ubiquistick/interfaces/ISimpleBond.sol": {
      "keccak256": "0x075efe9e5965487c3a27691924d36c7771cb554592304927b60ac46be42d0719",
      "license": "MIT",
      "urls": [
        "bzz-raw://7df92cc358ac2d1fcb1c7f609e02fc31aa6df4bf1cb9e7d98790787980c672c1",
        "dweb:/ipfs/QmPqFgTPpsFY7PcsB8WQ9hm82oGwHkk2AbgaHMyae1V216"
      ]
    },
    "src/ubiquistick/interfaces/IUAR.sol": {
      "keccak256": "0x51eeeb5dd46c223bf7b4ae0a53100a5f4ea16ae2c3e5b5bb3b05df5cb3b82159",
      "license": "MIT",
      "urls": [
        "bzz-raw://48caa1b0ad1fb0e2550f4413e70181b0330c1f0f051d655c4140e842f3507198",
        "dweb:/ipfs/QmdQNQUtUo57nR7eiRHBJ6WwNmLnEnmCSrsKqNR9qJauDf"
      ]
    }
  },
  "version": 1
}