/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TheUbiquityStick, TheUbiquityStickInterface } from "../TheUbiquityStick";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ntype",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIdNext",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001600b553480156200001657600080fd5b50604080518082018252600f81526e54686520556269717569537469636b60881b6020808301918252835180850190945260038452624b455960e81b908401528151919291620000699160009162000184565b5080516200007f90600190602084019062000184565b5050506200009c62000096620000ad60201b60201c565b620000b1565b620000a73362000103565b62000267565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a546001600160a01b03163314620001625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b82805462000192906200022a565b90600052602060002090601f016020900481019282620001b6576000855562000201565b82601f10620001d157805160ff191683800117855562000201565b8280016001018555821562000201579182015b8281111562000201578251825591602001919060010190620001e4565b506200020f92915062000213565b5090565b5b808211156200020f576000815560010162000214565b600181811c908216806200023f57607f821691505b602082108114156200026157634e487b7160e01b600052602260045260246000fd5b50919050565b611d9c80620002776000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80634f6ccce7116100de57806395d89b4111610097578063c87b56dd11610071578063c87b56dd14610353578063e985e9c514610366578063f2fde38b146103a2578063fca3b5aa146103b557600080fd5b806395d89b4114610325578063a22cb4651461032d578063b88d4fde1461034057600080fd5b80634f6ccce7146102ca5780636352211e146102dd57806370a08231146102f0578063715018a6146103035780638bbf58b31461030b5780638da5cb5b1461031457600080fd5b806318160ddd1161014b5780632f745c59116101255780632f745c591461027e57806340d097c31461029157806342842e0e146102a457806342966c68146102b757600080fd5b806318160ddd1461023657806320c69e561461024857806323b872dd1461026b57600080fd5b806301ffc9a71461019357806306fdde03146101bb57806307546172146101d0578063081812fc146101fb578063095ea7b31461020e578063162094c414610223575b600080fd5b6101a66101a136600461185a565b6103c8565b60405190151581526020015b60405180910390f35b6101c36103d9565b6040516101b291906118cb565b600c546101e3906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b6101e36102093660046118de565b61046b565b61022161021c366004611913565b610505565b005b6102216102313660046119c9565b61061b565b6008545b6040519081526020016101b2565b6101a66102563660046118de565b600f6020526000908152604090205460ff1681565b610221610279366004611a24565b6106b6565b61023a61028c366004611913565b6106e8565b61022161029f366004611a60565b61077e565b6102216102b2366004611a24565b610823565b6102216102c53660046118de565b61083e565b61023a6102d83660046118de565b6108b8565b6101e36102eb3660046118de565b61094b565b61023a6102fe366004611a60565b6109c2565b610221610a49565b61023a600b5481565b600a546001600160a01b03166101e3565b6101c3610a7f565b61022161033b366004611a7b565b610a8e565b61022161034e366004611ab7565b610a99565b6101c36103613660046118de565b610ad1565b6101a6610374366004611b33565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102216103b0366004611a60565b610beb565b6102216103c3366004611a60565b610c83565b60006103d382610ccf565b92915050565b6060600080546103e890611b66565b80601f016020809104026020016040519081016040528092919081815260200182805461041490611b66565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104e95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105108261094b565b9050806001600160a01b0316836001600160a01b0316141561057e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104e0565b336001600160a01b038216148061059a575061059a8133610374565b61060c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104e0565b6106168383610cf4565b505050565b600c546001600160a01b031633146106625760405162461bcd60e51b815260206004820152600a6024820152692737ba1036b4b73a32b960b11b60448201526064016104e0565b8161067a57805161061690600d9060208401906117ab565b600182141561069657805161061690600e9060208401906117ab565b60028214156106b25780516106169060109060208401906117ab565b5050565b6106c1335b82610d62565b6106dd5760405162461bcd60e51b81526004016104e090611ba1565b610616838383610e59565b60006106f3836109c2565b82106107555760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104e0565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600c546001600160a01b031633146107c55760405162461bcd60e51b815260206004820152600a6024820152692737ba1036b4b73a32b960b11b60448201526064016104e0565b600b80549060019060006107d98385611c08565b90915550604090506107e9611004565b6107f39190611c20565b61081957602a8114610819576000818152600f60205260409020805460ff191660011790555b6106b28282611065565b61061683838360405180602001604052806000815250610a99565b610847336106bb565b6108ac5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016104e0565b6108b58161107f565b50565b60006108c360085490565b82106109265760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104e0565b6008828154811061093957610939611c42565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103d35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104e0565b60006001600160a01b038216610a2d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104e0565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610a735760405162461bcd60e51b81526004016104e090611c58565b610a7d6000611126565b565b6060600180546103e890611b66565b6106b2338383611178565b610aa33383610d62565b610abf5760405162461bcd60e51b81526004016104e090611ba1565b610acb84848484611247565b50505050565b6000818152600260205260409020546060906001600160a01b0316610b2c5760405162461bcd60e51b81526020600482015260116024820152702737b732bc34b9ba32b73a103a37b5b2b760791b60448201526064016104e0565b6000828152600f602052604090205460ff16610b5857602a8214610b5157600d610b5b565b6010610b5b565b600e5b8054610b6690611b66565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9290611b66565b8015610bdf5780601f10610bb457610100808354040283529160200191610bdf565b820191906000526020600020905b815481529060010190602001808311610bc257829003601f168201915b50505050509050919050565b600a546001600160a01b03163314610c155760405162461bcd60e51b81526004016104e090611c58565b6001600160a01b038116610c7a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e0565b6108b581611126565b600a546001600160a01b03163314610cad5760405162461bcd60e51b81526004016104e090611c58565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b0319821663780e9d6360e01b14806103d357506103d38261127a565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d298261094b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610ddb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104e0565b6000610de68361094b565b9050806001600160a01b0316846001600160a01b03161480610e215750836001600160a01b0316610e168461046b565b6001600160a01b0316145b80610e5157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610e6c8261094b565b6001600160a01b031614610ed45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016104e0565b6001600160a01b038216610f365760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104e0565b610f418383836112ca565b610f4c600082610cf4565b6001600160a01b0383166000908152600360205260408120805460019290610f75908490611c8d565b90915550506001600160a01b0382166000908152600360205260408120805460019290610fa3908490611c08565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000444233600b546040516020016110479493929190938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b6040516020818303038152906040528051906020012060001c905090565b6106b28282604051806020016040528060008152506112d5565b600061108a8261094b565b9050611098816000846112ca565b6110a3600083610cf4565b6001600160a01b03811660009081526003602052604081208054600192906110cc908490611c8d565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156111da5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104e0565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611252848484610e59565b61125e84848484611308565b610acb5760405162461bcd60e51b81526004016104e090611ca4565b60006001600160e01b031982166380ac58cd60e01b14806112ab57506001600160e01b03198216635b5e139f60e01b145b806103d357506301ffc9a760e01b6001600160e01b03198316146103d3565b610616838383611415565b6112df83836114cd565b6112ec6000848484611308565b6106165760405162461bcd60e51b81526004016104e090611ca4565b60006001600160a01b0384163b1561140a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061134c903390899088908890600401611cf6565b602060405180830381600087803b15801561136657600080fd5b505af1925050508015611396575060408051601f3d908101601f1916820190925261139391810190611d33565b60015b6113f0573d8080156113c4576040519150601f19603f3d011682016040523d82523d6000602084013e6113c9565b606091505b5080516113e85760405162461bcd60e51b81526004016104e090611ca4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e51565b506001949350505050565b6001600160a01b0383166114705761146b81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611493565b816001600160a01b0316836001600160a01b03161461149357611493838261161b565b6001600160a01b0382166114aa57610616816116b8565b826001600160a01b0316826001600160a01b031614610616576106168282611767565b6001600160a01b0382166115235760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104e0565b6000818152600260205260409020546001600160a01b0316156115885760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104e0565b611594600083836112ca565b6001600160a01b03821660009081526003602052604081208054600192906115bd908490611c08565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611628846109c2565b6116329190611c8d565b600083815260076020526040902054909150808214611685576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906116ca90600190611c8d565b600083815260096020526040812054600880549394509092849081106116f2576116f2611c42565b90600052602060002001549050806008838154811061171357611713611c42565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061174b5761174b611d50565b6001900381819060005260206000200160009055905550505050565b6000611772836109c2565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b8280546117b790611b66565b90600052602060002090601f0160209004810192826117d9576000855561181f565b82601f106117f257805160ff191683800117855561181f565b8280016001018555821561181f579182015b8281111561181f578251825591602001919060010190611804565b5061182b92915061182f565b5090565b5b8082111561182b5760008155600101611830565b6001600160e01b0319811681146108b557600080fd5b60006020828403121561186c57600080fd5b813561187781611844565b9392505050565b6000815180845260005b818110156118a457602081850181015186830182015201611888565b818111156118b6576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611877602083018461187e565b6000602082840312156118f057600080fd5b5035919050565b80356001600160a01b038116811461190e57600080fd5b919050565b6000806040838503121561192657600080fd5b61192f836118f7565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561196e5761196e61193d565b604051601f8501601f19908116603f011681019082821181831017156119965761199661193d565b816040528093508581528686860111156119af57600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156119dc57600080fd5b82359150602083013567ffffffffffffffff8111156119fa57600080fd5b8301601f81018513611a0b57600080fd5b611a1a85823560208401611953565b9150509250929050565b600080600060608486031215611a3957600080fd5b611a42846118f7565b9250611a50602085016118f7565b9150604084013590509250925092565b600060208284031215611a7257600080fd5b611877826118f7565b60008060408385031215611a8e57600080fd5b611a97836118f7565b915060208301358015158114611aac57600080fd5b809150509250929050565b60008060008060808587031215611acd57600080fd5b611ad6856118f7565b9350611ae4602086016118f7565b925060408501359150606085013567ffffffffffffffff811115611b0757600080fd5b8501601f81018713611b1857600080fd5b611b2787823560208401611953565b91505092959194509250565b60008060408385031215611b4657600080fd5b611b4f836118f7565b9150611b5d602084016118f7565b90509250929050565b600181811c90821680611b7a57607f821691505b60208210811415611b9b57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611c1b57611c1b611bf2565b500190565b600082611c3d57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015611c9f57611c9f611bf2565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d299083018461187e565b9695505050505050565b600060208284031215611d4557600080fd5b815161187781611844565b634e487b7160e01b600052603160045260246000fdfea264697066735822122082df6085ccef520364a3b5286102149c6b506a44407ed926d47ac3d55dc42e9564736f6c63430008090033";

type TheUbiquityStickConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TheUbiquityStickConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TheUbiquityStick__factory extends ContractFactory {
  constructor(...args: TheUbiquityStickConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<TheUbiquityStick> {
    return super.deploy(overrides || {}) as Promise<TheUbiquityStick>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TheUbiquityStick {
    return super.attach(address) as TheUbiquityStick;
  }
  connect(signer: Signer): TheUbiquityStick__factory {
    return super.connect(signer) as TheUbiquityStick__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheUbiquityStickInterface {
    return new utils.Interface(_abi) as TheUbiquityStickInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TheUbiquityStick {
    return new Contract(address, _abi, signerOrProvider) as TheUbiquityStick;
  }
}
