/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface CollectableDustInterface extends ethers.utils.Interface {
  functions: {
    "ETH_ADDRESS()": FunctionFragment;
    "addProtocolToken(address)": FunctionFragment;
    "removeProtocolToken(address)": FunctionFragment;
    "sendDust(address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ETH_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addProtocolToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeProtocolToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "sendDust",
    values: [string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "ETH_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addProtocolToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeProtocolToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sendDust", data: BytesLike): Result;

  events: {
    "DustSent(address,address,uint256)": EventFragment;
    "ProtocolTokenAdded(address)": EventFragment;
    "ProtocolTokenRemoved(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DustSent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProtocolTokenAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProtocolTokenRemoved"): EventFragment;
}

export class CollectableDust extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: CollectableDustInterface;

  functions: {
    ETH_ADDRESS(overrides?: CallOverrides): Promise<[string]>;

    "ETH_ADDRESS()"(overrides?: CallOverrides): Promise<[string]>;

    addProtocolToken(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addProtocolToken(address)"(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeProtocolToken(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "removeProtocolToken(address)"(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    sendDust(
      _to: string,
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "sendDust(address,address,uint256)"(
      _to: string,
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  ETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

  "ETH_ADDRESS()"(overrides?: CallOverrides): Promise<string>;

  addProtocolToken(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addProtocolToken(address)"(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeProtocolToken(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "removeProtocolToken(address)"(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  sendDust(
    _to: string,
    _token: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "sendDust(address,address,uint256)"(
    _to: string,
    _token: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    ETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

    "ETH_ADDRESS()"(overrides?: CallOverrides): Promise<string>;

    addProtocolToken(_token: string, overrides?: CallOverrides): Promise<void>;

    "addProtocolToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeProtocolToken(
      _token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeProtocolToken(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    sendDust(
      _to: string,
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "sendDust(address,address,uint256)"(
      _to: string,
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    DustSent(
      _to: null,
      token: null,
      amount: null
    ): TypedEventFilter<
      [string, string, BigNumber],
      { _to: string; token: string; amount: BigNumber }
    >;

    ProtocolTokenAdded(
      _token: null
    ): TypedEventFilter<[string], { _token: string }>;

    ProtocolTokenRemoved(
      _token: null
    ): TypedEventFilter<[string], { _token: string }>;
  };

  estimateGas: {
    ETH_ADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    "ETH_ADDRESS()"(overrides?: CallOverrides): Promise<BigNumber>;

    addProtocolToken(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addProtocolToken(address)"(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeProtocolToken(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "removeProtocolToken(address)"(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    sendDust(
      _to: string,
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "sendDust(address,address,uint256)"(
      _to: string,
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    ETH_ADDRESS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ETH_ADDRESS()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addProtocolToken(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addProtocolToken(address)"(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeProtocolToken(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "removeProtocolToken(address)"(
      _token: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    sendDust(
      _to: string,
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "sendDust(address,address,uint256)"(
      _to: string,
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
