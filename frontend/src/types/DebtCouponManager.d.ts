/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface DebtCouponManagerInterface extends ethers.utils.Interface {
  functions: {
    "blockHeightDebt()": FunctionFragment;
    "burnAutoRedeemTokensForDollars(uint256)": FunctionFragment;
    "burnCouponsForAutoRedemption(uint256,uint256)": FunctionFragment;
    "burnExpiredCouponsForUGOV(uint256,uint256)": FunctionFragment;
    "couponLengthBlocks()": FunctionFragment;
    "debtCycle()": FunctionFragment;
    "dollarsMintedThisCycle()": FunctionFragment;
    "exchangeDollarsForDebtCoupons(uint256)": FunctionFragment;
    "exchangeDollarsForUAR(uint256)": FunctionFragment;
    "expiredCouponConvertionRate()": FunctionFragment;
    "getCouponsReturnedForDollars(uint256)": FunctionFragment;
    "getUARReturnedForDollars(uint256)": FunctionFragment;
    "manager()": FunctionFragment;
    "mintClaimableDollars()": FunctionFragment;
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": FunctionFragment;
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "redeemCoupons(uint256,uint256)": FunctionFragment;
    "setCouponLength(uint256)": FunctionFragment;
    "setExpiredCouponConvertionRate(uint256)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "blockHeightDebt",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "burnAutoRedeemTokensForDollars",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burnCouponsForAutoRedemption",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "burnExpiredCouponsForUGOV",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "couponLengthBlocks",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "debtCycle", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "dollarsMintedThisCycle",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "exchangeDollarsForDebtCoupons",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "exchangeDollarsForUAR",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "expiredCouponConvertionRate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCouponsReturnedForDollars",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getUARReturnedForDollars",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "manager", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "mintClaimableDollars",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemCoupons",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCouponLength",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setExpiredCouponConvertionRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "blockHeightDebt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burnAutoRedeemTokensForDollars",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burnCouponsForAutoRedemption",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "burnExpiredCouponsForUGOV",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "couponLengthBlocks",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "debtCycle", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "dollarsMintedThisCycle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "exchangeDollarsForDebtCoupons",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "exchangeDollarsForUAR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "expiredCouponConvertionRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCouponsReturnedForDollars",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUARReturnedForDollars",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "manager", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mintClaimableDollars",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemCoupons",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCouponLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setExpiredCouponConvertionRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;

  events: {
    "CouponLengthChanged(uint256,uint256)": EventFragment;
    "ExpiredCouponConvertionRateChanged(uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CouponLengthChanged"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpiredCouponConvertionRateChanged"
  ): EventFragment;
}

export class DebtCouponManager extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: DebtCouponManagerInterface;

  functions: {
    blockHeightDebt(overrides?: CallOverrides): Promise<[BigNumber]>;

    "blockHeightDebt()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    burnAutoRedeemTokensForDollars(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "burnAutoRedeemTokensForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    burnCouponsForAutoRedemption(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "burnCouponsForAutoRedemption(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    burnExpiredCouponsForUGOV(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "burnExpiredCouponsForUGOV(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    couponLengthBlocks(overrides?: CallOverrides): Promise<[BigNumber]>;

    "couponLengthBlocks()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    debtCycle(overrides?: CallOverrides): Promise<[boolean]>;

    "debtCycle()"(overrides?: CallOverrides): Promise<[boolean]>;

    dollarsMintedThisCycle(overrides?: CallOverrides): Promise<[BigNumber]>;

    "dollarsMintedThisCycle()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    exchangeDollarsForDebtCoupons(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "exchangeDollarsForDebtCoupons(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    exchangeDollarsForUAR(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "exchangeDollarsForUAR(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    expiredCouponConvertionRate(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "expiredCouponConvertionRate()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getCouponsReturnedForDollars(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getCouponsReturnedForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getUARReturnedForDollars(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getUARReturnedForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    manager(overrides?: CallOverrides): Promise<[string]>;

    "manager()"(overrides?: CallOverrides): Promise<[string]>;

    mintClaimableDollars(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "mintClaimableDollars()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    onERC1155Received(
      operator: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      operator: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    redeemCoupons(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "redeemCoupons(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setCouponLength(
      _couponLengthBlocks: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setCouponLength(uint256)"(
      _couponLengthBlocks: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setExpiredCouponConvertionRate(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setExpiredCouponConvertionRate(uint256)"(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  blockHeightDebt(overrides?: CallOverrides): Promise<BigNumber>;

  "blockHeightDebt()"(overrides?: CallOverrides): Promise<BigNumber>;

  burnAutoRedeemTokensForDollars(
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "burnAutoRedeemTokensForDollars(uint256)"(
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  burnCouponsForAutoRedemption(
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "burnCouponsForAutoRedemption(uint256,uint256)"(
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  burnExpiredCouponsForUGOV(
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "burnExpiredCouponsForUGOV(uint256,uint256)"(
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  couponLengthBlocks(overrides?: CallOverrides): Promise<BigNumber>;

  "couponLengthBlocks()"(overrides?: CallOverrides): Promise<BigNumber>;

  debtCycle(overrides?: CallOverrides): Promise<boolean>;

  "debtCycle()"(overrides?: CallOverrides): Promise<boolean>;

  dollarsMintedThisCycle(overrides?: CallOverrides): Promise<BigNumber>;

  "dollarsMintedThisCycle()"(overrides?: CallOverrides): Promise<BigNumber>;

  exchangeDollarsForDebtCoupons(
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "exchangeDollarsForDebtCoupons(uint256)"(
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  exchangeDollarsForUAR(
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "exchangeDollarsForUAR(uint256)"(
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  expiredCouponConvertionRate(overrides?: CallOverrides): Promise<BigNumber>;

  "expiredCouponConvertionRate()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getCouponsReturnedForDollars(
    amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getCouponsReturnedForDollars(uint256)"(
    amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUARReturnedForDollars(
    amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUARReturnedForDollars(uint256)"(
    amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  manager(overrides?: CallOverrides): Promise<string>;

  "manager()"(overrides?: CallOverrides): Promise<string>;

  mintClaimableDollars(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "mintClaimableDollars()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC1155BatchReceived(
    arg0: string,
    arg1: string,
    arg2: BigNumberish[],
    arg3: BigNumberish[],
    arg4: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
    arg0: string,
    arg1: string,
    arg2: BigNumberish[],
    arg3: BigNumberish[],
    arg4: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  onERC1155Received(
    operator: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "onERC1155Received(address,address,uint256,uint256,bytes)"(
    operator: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  redeemCoupons(
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "redeemCoupons(uint256,uint256)"(
    id: BigNumberish,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setCouponLength(
    _couponLengthBlocks: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setCouponLength(uint256)"(
    _couponLengthBlocks: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setExpiredCouponConvertionRate(
    rate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setExpiredCouponConvertionRate(uint256)"(
    rate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    blockHeightDebt(overrides?: CallOverrides): Promise<BigNumber>;

    "blockHeightDebt()"(overrides?: CallOverrides): Promise<BigNumber>;

    burnAutoRedeemTokensForDollars(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "burnAutoRedeemTokensForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burnCouponsForAutoRedemption(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "burnCouponsForAutoRedemption(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burnExpiredCouponsForUGOV(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "burnExpiredCouponsForUGOV(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    couponLengthBlocks(overrides?: CallOverrides): Promise<BigNumber>;

    "couponLengthBlocks()"(overrides?: CallOverrides): Promise<BigNumber>;

    debtCycle(overrides?: CallOverrides): Promise<boolean>;

    "debtCycle()"(overrides?: CallOverrides): Promise<boolean>;

    dollarsMintedThisCycle(overrides?: CallOverrides): Promise<BigNumber>;

    "dollarsMintedThisCycle()"(overrides?: CallOverrides): Promise<BigNumber>;

    exchangeDollarsForDebtCoupons(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "exchangeDollarsForDebtCoupons(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    exchangeDollarsForUAR(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "exchangeDollarsForUAR(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    expiredCouponConvertionRate(overrides?: CallOverrides): Promise<BigNumber>;

    "expiredCouponConvertionRate()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCouponsReturnedForDollars(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCouponsReturnedForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUARReturnedForDollars(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUARReturnedForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    manager(overrides?: CallOverrides): Promise<string>;

    "manager()"(overrides?: CallOverrides): Promise<string>;

    mintClaimableDollars(overrides?: CallOverrides): Promise<void>;

    "mintClaimableDollars()"(overrides?: CallOverrides): Promise<void>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC1155Received(
      operator: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      operator: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    redeemCoupons(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "redeemCoupons(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setCouponLength(
      _couponLengthBlocks: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setCouponLength(uint256)"(
      _couponLengthBlocks: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setExpiredCouponConvertionRate(
      rate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setExpiredCouponConvertionRate(uint256)"(
      rate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    CouponLengthChanged(
      newCouponLengthBlocks: null,
      previousCouponLengthBlocks: null
    ): TypedEventFilter<
      [BigNumber, BigNumber],
      {
        newCouponLengthBlocks: BigNumber;
        previousCouponLengthBlocks: BigNumber;
      }
    >;

    ExpiredCouponConvertionRateChanged(
      newRate: null,
      previousRate: null
    ): TypedEventFilter<
      [BigNumber, BigNumber],
      { newRate: BigNumber; previousRate: BigNumber }
    >;
  };

  estimateGas: {
    blockHeightDebt(overrides?: CallOverrides): Promise<BigNumber>;

    "blockHeightDebt()"(overrides?: CallOverrides): Promise<BigNumber>;

    burnAutoRedeemTokensForDollars(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "burnAutoRedeemTokensForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    burnCouponsForAutoRedemption(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "burnCouponsForAutoRedemption(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    burnExpiredCouponsForUGOV(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "burnExpiredCouponsForUGOV(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    couponLengthBlocks(overrides?: CallOverrides): Promise<BigNumber>;

    "couponLengthBlocks()"(overrides?: CallOverrides): Promise<BigNumber>;

    debtCycle(overrides?: CallOverrides): Promise<BigNumber>;

    "debtCycle()"(overrides?: CallOverrides): Promise<BigNumber>;

    dollarsMintedThisCycle(overrides?: CallOverrides): Promise<BigNumber>;

    "dollarsMintedThisCycle()"(overrides?: CallOverrides): Promise<BigNumber>;

    exchangeDollarsForDebtCoupons(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "exchangeDollarsForDebtCoupons(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    exchangeDollarsForUAR(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "exchangeDollarsForUAR(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    expiredCouponConvertionRate(overrides?: CallOverrides): Promise<BigNumber>;

    "expiredCouponConvertionRate()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCouponsReturnedForDollars(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCouponsReturnedForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUARReturnedForDollars(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUARReturnedForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    manager(overrides?: CallOverrides): Promise<BigNumber>;

    "manager()"(overrides?: CallOverrides): Promise<BigNumber>;

    mintClaimableDollars(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "mintClaimableDollars()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC1155Received(
      operator: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      operator: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemCoupons(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "redeemCoupons(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setCouponLength(
      _couponLengthBlocks: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setCouponLength(uint256)"(
      _couponLengthBlocks: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setExpiredCouponConvertionRate(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setExpiredCouponConvertionRate(uint256)"(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    blockHeightDebt(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "blockHeightDebt()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    burnAutoRedeemTokensForDollars(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "burnAutoRedeemTokensForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    burnCouponsForAutoRedemption(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "burnCouponsForAutoRedemption(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    burnExpiredCouponsForUGOV(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "burnExpiredCouponsForUGOV(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    couponLengthBlocks(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "couponLengthBlocks()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    debtCycle(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "debtCycle()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    dollarsMintedThisCycle(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "dollarsMintedThisCycle()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    exchangeDollarsForDebtCoupons(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "exchangeDollarsForDebtCoupons(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    exchangeDollarsForUAR(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "exchangeDollarsForUAR(uint256)"(
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    expiredCouponConvertionRate(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "expiredCouponConvertionRate()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCouponsReturnedForDollars(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCouponsReturnedForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUARReturnedForDollars(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUARReturnedForDollars(uint256)"(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    manager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "manager()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    mintClaimableDollars(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "mintClaimableDollars()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      operator: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      operator: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    redeemCoupons(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "redeemCoupons(uint256,uint256)"(
      id: BigNumberish,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setCouponLength(
      _couponLengthBlocks: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setCouponLength(uint256)"(
      _couponLengthBlocks: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setExpiredCouponConvertionRate(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setExpiredCouponConvertionRate(uint256)"(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
