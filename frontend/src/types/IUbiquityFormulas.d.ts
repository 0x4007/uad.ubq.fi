/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface IUbiquityFormulasInterface extends ethers.utils.Interface {
  functions: {
    "bondPrice(uint256,uint256,uint256)": FunctionFragment;
    "bonding(uint256,uint256,uint256)": FunctionFragment;
    "durationMultiply(uint256,uint256,uint256)": FunctionFragment;
    "redeemBonds(uint256,uint256,uint256)": FunctionFragment;
    "ugovMultiply(uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "bondPrice",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "bonding",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "durationMultiply",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemBonds",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ugovMultiply",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "bondPrice", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "bonding", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "durationMultiply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemBonds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ugovMultiply",
    data: BytesLike
  ): Result;

  events: {};
}

export class IUbiquityFormulas extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: IUbiquityFormulasInterface;

  functions: {
    bondPrice(
      _totalULP: BigNumberish,
      _totalUBOND: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _priceUBOND: BigNumber }>;

    "bondPrice(uint256,uint256,uint256)"(
      _totalULP: BigNumberish,
      _totalUBOND: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _priceUBOND: BigNumber }>;

    bonding(
      _shares: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _uBOND: BigNumber }>;

    "bonding(uint256,uint256,uint256)"(
      _shares: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _uBOND: BigNumber }>;

    durationMultiply(
      _uLP: BigNumberish,
      _weeks: BigNumberish,
      _multiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _shares: BigNumber }>;

    "durationMultiply(uint256,uint256,uint256)"(
      _uLP: BigNumberish,
      _weeks: BigNumberish,
      _multiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _shares: BigNumber }>;

    redeemBonds(
      _uBOND: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _uLP: BigNumber }>;

    "redeemBonds(uint256,uint256,uint256)"(
      _uBOND: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _uLP: BigNumber }>;

    ugovMultiply(
      _multiplier: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _newMultiplier: BigNumber }>;

    "ugovMultiply(uint256,uint256)"(
      _multiplier: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _newMultiplier: BigNumber }>;
  };

  bondPrice(
    _totalULP: BigNumberish,
    _totalUBOND: BigNumberish,
    _targetPrice: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "bondPrice(uint256,uint256,uint256)"(
    _totalULP: BigNumberish,
    _totalUBOND: BigNumberish,
    _targetPrice: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  bonding(
    _shares: BigNumberish,
    _currentShareValue: BigNumberish,
    _targetPrice: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "bonding(uint256,uint256,uint256)"(
    _shares: BigNumberish,
    _currentShareValue: BigNumberish,
    _targetPrice: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  durationMultiply(
    _uLP: BigNumberish,
    _weeks: BigNumberish,
    _multiplier: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "durationMultiply(uint256,uint256,uint256)"(
    _uLP: BigNumberish,
    _weeks: BigNumberish,
    _multiplier: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  redeemBonds(
    _uBOND: BigNumberish,
    _currentShareValue: BigNumberish,
    _targetPrice: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "redeemBonds(uint256,uint256,uint256)"(
    _uBOND: BigNumberish,
    _currentShareValue: BigNumberish,
    _targetPrice: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  ugovMultiply(
    _multiplier: BigNumberish,
    _price: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "ugovMultiply(uint256,uint256)"(
    _multiplier: BigNumberish,
    _price: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    bondPrice(
      _totalULP: BigNumberish,
      _totalUBOND: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "bondPrice(uint256,uint256,uint256)"(
      _totalULP: BigNumberish,
      _totalUBOND: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bonding(
      _shares: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "bonding(uint256,uint256,uint256)"(
      _shares: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    durationMultiply(
      _uLP: BigNumberish,
      _weeks: BigNumberish,
      _multiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "durationMultiply(uint256,uint256,uint256)"(
      _uLP: BigNumberish,
      _weeks: BigNumberish,
      _multiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemBonds(
      _uBOND: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "redeemBonds(uint256,uint256,uint256)"(
      _uBOND: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ugovMultiply(
      _multiplier: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ugovMultiply(uint256,uint256)"(
      _multiplier: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    bondPrice(
      _totalULP: BigNumberish,
      _totalUBOND: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "bondPrice(uint256,uint256,uint256)"(
      _totalULP: BigNumberish,
      _totalUBOND: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bonding(
      _shares: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "bonding(uint256,uint256,uint256)"(
      _shares: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    durationMultiply(
      _uLP: BigNumberish,
      _weeks: BigNumberish,
      _multiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "durationMultiply(uint256,uint256,uint256)"(
      _uLP: BigNumberish,
      _weeks: BigNumberish,
      _multiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemBonds(
      _uBOND: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "redeemBonds(uint256,uint256,uint256)"(
      _uBOND: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ugovMultiply(
      _multiplier: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ugovMultiply(uint256,uint256)"(
      _multiplier: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    bondPrice(
      _totalULP: BigNumberish,
      _totalUBOND: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "bondPrice(uint256,uint256,uint256)"(
      _totalULP: BigNumberish,
      _totalUBOND: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bonding(
      _shares: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "bonding(uint256,uint256,uint256)"(
      _shares: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    durationMultiply(
      _uLP: BigNumberish,
      _weeks: BigNumberish,
      _multiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "durationMultiply(uint256,uint256,uint256)"(
      _uLP: BigNumberish,
      _weeks: BigNumberish,
      _multiplier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    redeemBonds(
      _uBOND: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "redeemBonds(uint256,uint256,uint256)"(
      _uBOND: BigNumberish,
      _currentShareValue: BigNumberish,
      _targetPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ugovMultiply(
      _multiplier: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ugovMultiply(uint256,uint256)"(
      _multiplier: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
