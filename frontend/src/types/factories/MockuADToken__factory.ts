/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockuADToken } from "../MockuADToken";

export class MockuADToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockuADToken> {
    return super.deploy(
      initialSupply,
      overrides || {}
    ) as Promise<MockuADToken>;
  }
  getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  attach(address: string): MockuADToken {
    return super.attach(address) as MockuADToken;
  }
  connect(signer: Signer): MockuADToken__factory {
    return super.connect(signer) as MockuADToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockuADToken {
    return new Contract(address, _abi, signerOrProvider) as MockuADToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e8b38038062000e8b83398101604081905262000034916200024f565b6040518060400160405280600e81526020016d3ab134b8bab4ba3ca237b63630b960911b815250604051806040016040528060038152602001621d505160ea1b81525081600390805190602001906200008f929190620001a9565b508051620000a5906004906020840190620001a9565b505050620000ba3382620000c160201b60201c565b50620002ca565b6001600160a01b0382166200011c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000130919062000268565b90915550506001600160a01b038216600090815260208190526040812080548392906200015f90849062000268565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001b7906200028d565b90600052602060002090601f016020900481019282620001db576000855562000226565b82601f10620001f657805160ff191683800117855562000226565b8280016001018555821562000226579182015b828111156200022657825182559160200191906001019062000209565b506200023492915062000238565b5090565b5b8082111562000234576000815560010162000239565b60006020828403121562000261578081fd5b5051919050565b600082198211156200028857634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680620002a257607f821691505b60208210811415620002c457634e487b7160e01b600052602260045260246000fd5b50919050565b610bb180620002da6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac1461019c578063a457c2d7146101af578063a9059cbb146101c2578063dd62ed3e146101d5576100df565b806340c10f191461016c57806370a082311461018157806395d89b4114610194576100df565b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a5780633950935114610159576100df565b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec61020e565b6040516100f99190610ad1565b60405180910390f35b610115610110366004610aa8565b6102a0565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610a6d565b6102b6565b604051601281526020016100f9565b610115610167366004610aa8565b61037a565b61017f61017a366004610aa8565b6103b6565b005b61012961018f366004610a1a565b6103c4565b6100ec6103e3565b61017f6101aa366004610aa8565b6103f2565b6101156101bd366004610aa8565b6103fc565b6101156101d0366004610aa8565b6104ad565b6101296101e3366004610a3b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461021d90610b53565b80601f016020809104026020016040519081016040528092919081815260200182805461024990610b53565b80156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b5050505050905090565b60006102ad3384846104ba565b50600192915050565b60006102c38484846105df565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103625760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61036f85338584036104ba565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102ad9185906103b1908690610b24565b6104ba565b6103c082826107dd565b5050565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461021d90610b53565b6103c082826108bd565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104965760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610359565b6104a333858584036104ba565b5060019392505050565b60006102ad3384846105df565b6001600160a01b03831661051c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610359565b6001600160a01b03821661057d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610359565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661065b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610359565b6001600160a01b0382166106bd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610359565b6001600160a01b0383166000908152602081905260409020548181101561074c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610359565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610783908490610b24565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107cf91815260200190565b60405180910390a350505050565b6001600160a01b0382166108335760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610359565b80600260008282546108459190610b24565b90915550506001600160a01b03821660009081526020819052604081208054839290610872908490610b24565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36103c0565b6001600160a01b03821661091d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610359565b6001600160a01b038216600090815260208190526040902054818110156109915760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610359565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109c0908490610b3c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105d2565b80356001600160a01b03811681146103de57600080fd5b600060208284031215610a2b578081fd5b610a3482610a03565b9392505050565b60008060408385031215610a4d578081fd5b610a5683610a03565b9150610a6460208401610a03565b90509250929050565b600080600060608486031215610a81578081fd5b610a8a84610a03565b9250610a9860208501610a03565b9150604084013590509250925092565b60008060408385031215610aba578182fd5b610ac383610a03565b946020939093013593505050565b6000602080835283518082850152825b81811015610afd57858101830151858201604001528201610ae1565b81811115610b0e5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610b3757610b37610b8e565b500190565b600082821015610b4e57610b4e610b8e565b500390565b600181811c90821680610b6757607f821691505b60208210811415610b8857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000803000a";
